[{"title":"Curve","type":0,"sectionRef":"#","url":"api/Curve","content":"","keywords":""},{"title":"Types","type":1,"pageTitle":"Curve","url":"api/Curve#types","content":" "},{"title":"Point","type":1,"pageTitle":"Curve","url":"api/Curve#Point","content":"&lt;/&gt; type Point = Vector3 | Vector2   "},{"title":"PointArray","type":1,"pageTitle":"Curve","url":"api/Curve#PointArray","content":"&lt;/&gt; type PointArray = {[number]: Point}  "},{"title":"Functions","type":1,"pageTitle":"Curve","url":"api/Curve#functions","content":" "},{"title":"HermiteInterpolate","type":1,"pageTitle":"Curve","url":"api/Curve#HermiteInterpolate","content":"&lt;/&gt; Curve.HermiteInterpolate( P0: Point, P1: Point, P2: Point, P3: Point, Mul: number, Tension: number?, Bias: number? ) → Point Returns a Hermite Interpolation based off of four points  "},{"title":"InterpolateBezier","type":1,"pageTitle":"Curve","url":"api/Curve#InterpolateBezier","content":"&lt;/&gt; Curve.InterpolateBezier( Points: PointArray, Completion: number-- should be a value between 0-1 (inclusive) ) → CFrame Performs a Bezier Curve Interpolation on a set of points, based completed the curve should be  "},{"title":"PiecewiseHermiteInterpolate","type":1,"pageTitle":"Curve","url":"api/Curve#PiecewiseHermiteInterpolate","content":"&lt;/&gt; Curve.PiecewiseHermiteInterpolate( Points: PointArray, Completion: number, ...: number...-- Refer to Hermite Interpolation for the rest of the possible arguments ) → Point Returns a Piecewise Hermite Interpolation based off of four points "},{"title":"Cleaner","type":0,"sectionRef":"#","url":"api/Cleaner","content":"","keywords":""},{"title":"Types","type":1,"pageTitle":"Cleaner","url":"api/Cleaner#types","content":" "},{"title":"CleanableObjects","type":1,"pageTitle":"Cleaner","url":"api/Cleaner#CleanableObjects","content":"&lt;/&gt; type CleanableObjects = Instance | RBXScriptConnection | (any) → any | Cleaner | {CleanableObjects} | {Destroy: (any) → any} | {Disconnect: (any) → any}   "},{"title":"Cleaner","type":1,"pageTitle":"Cleaner","url":"api/Cleaner#Cleaner","content":"&lt;/&gt; interface Cleaner { Index: number HasCleaned: boolean ToProcess: {[number]: any} }  "},{"title":"Functions","type":1,"pageTitle":"Cleaner","url":"api/Cleaner#functions","content":" "},{"title":"new","type":1,"pageTitle":"Cleaner","url":"api/Cleaner#new","content":"&lt;/&gt; Cleaner.new() → Cleaner Constructs a new Cleaner object, which is passed objects to be cleaned once Once a cleaner cleans, it is no longer functional, and a new cleaner must be created  "},{"title":"Add","type":1,"pageTitle":"Cleaner","url":"api/Cleaner#Add","content":"&lt;/&gt; Cleaner:Add() → () Adds an object to this Cleaner. Object must be one of the following: Cleaner Function Roblox Instance Roblox Event Connection Table of cleanable objects Table containing one of the following methods: Object:Clean() Object:Destroy() Object:Disconnect()   "},{"title":"Clean","type":1,"pageTitle":"Cleaner","url":"api/Cleaner#Clean","content":"&lt;/&gt; Cleaner:Clean() → () Cleans and locks this Cleaner preventing it from being used again. If an object is added to the Cleaner after it has been locked, it will be cleaned immediately. "},{"title":"GUICollector","type":0,"sectionRef":"#","url":"api/GUICollector","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#functions","content":" "},{"title":"new","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#new","content":"&lt;/&gt; GUICollector.new( Root: Instance,-- the UI element to bind to CheckType: string ) → GUICollector Constructs a new GUICollection Component and binds to the passed instance  "},{"title":"Destroy","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#Destroy","content":"&lt;/&gt; GUICollector:Destroy() → () Calls self.Cleaner:Clean() and destroys all that is related to the individual GUICollector  "},{"title":"GetObjectsWhichIntersect","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#GetObjectsWhichIntersect","content":"&lt;/&gt; GUICollector:GetObjectsWhichIntersect( ScreenPosition: Vector2-- Gets every object that intersects with this screen position ) → () Finds any active UI objects which intersect the given absolute screen position  "},{"title":"Initial","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#Initial","content":"&lt;/&gt; GUICollector:Initial() → () Core initial function located in every component  "},{"title":"IsVisible","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#IsVisible","content":"&lt;/&gt; GUICollector:IsVisible( UIElement: Instance-- The UI element to check if it is visible ) → () Checks if a UI element is really visible by checking all its parents  "},{"title":"TrackUIElement","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#TrackUIElement","content":"&lt;/&gt; GUICollector:TrackUIElement( UIElement: Instance-- The UI element to be tracked ) → () Keep track of UI visibility and sizing properties  "},{"title":"UpdateUIElement","type":1,"pageTitle":"GUICollector","url":"api/GUICollector#UpdateUIElement","content":"&lt;/&gt; GUICollector:UpdateUIElement( UIElement: Instance-- The UI element to be updated ) → () Cache and pre-compute boundaries for speed, or remove if UI is invisible "},{"title":"Load","type":0,"sectionRef":"#","url":"api/Load","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"Load","url":"api/Load#functions","content":" "},{"title":"new","type":1,"pageTitle":"Load","url":"api/Load#new","content":"&lt;/&gt; Load.new( Timeout: number,-- how long we should wait for the object to load Requirement: number-- how many times the object needs to load ) → Load Constructs a new Load object  "},{"title":"AwaitLoaded","type":1,"pageTitle":"Load","url":"api/Load#AwaitLoaded","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Load:AwaitLoaded() → () Yields until the object is loaded  "},{"title":"CheckLoaded","type":1,"pageTitle":"Load","url":"api/Load#CheckLoaded","content":"&lt;/&gt; Load:CheckLoaded() → boolean Checks if the Load object is loaded  "},{"title":"Step","type":1,"pageTitle":"Load","url":"api/Load#Step","content":"&lt;/&gt; Load:Step() → () Increases the load counter one "},{"title":"Async","type":0,"sectionRef":"#","url":"api/Async","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"Async","url":"api/Async#functions","content":" "},{"title":"Timer","type":1,"pageTitle":"Async","url":"api/Async#Timer","content":"&lt;/&gt; Async.Timer( Interval: number,-- How long to wait between calls. Call: function,-- The function to call. Name: string?-- Name of the label in microprofiler. ) → function-- A function to stop the timer. Creates a synchronised, blockable timer loop. Useful for UI updating and such.  "},{"title":"Delay","type":1,"pageTitle":"Async","url":"api/Async#Delay","content":"deprecated in v0.15 &lt;/&gt; This was deprecated in v0.15 This item is deprecated. Do not use it for new work. Async.Delay( DelaySeconds: number,-- in seconds FunctionToSpawn: function ) → () Now just a binding to task.delay  "},{"title":"Spawn","type":1,"pageTitle":"Async","url":"api/Async#Spawn","content":"deprecated in v0.15 &lt;/&gt; This was deprecated in v0.15 This item is deprecated. Do not use it for new work. Async.Spawn(FunctionToSpawn: function) → () Now just a binding to task.spawn  "},{"title":"Wait","type":1,"pageTitle":"Async","url":"api/Async#Wait","content":"deprecated in v0.15 &lt;/&gt; This was deprecated in v0.15 This item is deprecated. Do not use it for new work. Async.Wait( TimeToWait: number-- in seconds ) → () Now just a binding to task.wait "},{"title":"Array","type":0,"sectionRef":"#","url":"api/Array","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"Array","url":"api/Array#functions","content":" "},{"title":"Copy1D","type":1,"pageTitle":"Array","url":"api/Array#Copy1D","content":"&lt;/&gt; Array.Copy1D(Array: {[number]: any}) → {[number]: any} Copies the passed array. This is useful when attempting to make changes on an array, but you don't want to edit the original. local table = {} local table2 = table -- this does not copy, this is just a reference, any changes to table2 will affect table local table2 = Array.Copy1D(table) -- this is the correct way to copy   "},{"title":"Cut1D","type":1,"pageTitle":"Array","url":"api/Array#Cut1D","content":"&lt;/&gt; Array.Cut1D( Array: {[number]: any}, From: number, To: number ) → {[number]: any} Cuts a given array from the given index (inclusive) to the ending index (exclusive) The same as the pythonic syntax array[5:7]  "},{"title":"Filter1D","type":1,"pageTitle":"Array","url":"api/Array#Filter1D","content":"&lt;/&gt; Array.Filter1D( Array: {[number]: any}, Condition: ( Value: any, ItemIndex: number ) → boolean-- Should return true for items you want in your filtered array, false if you want them to be discarded ) → {[number]: any} Filters an array with a given condition function  "},{"title":"FoldLeft1D","type":1,"pageTitle":"Array","url":"api/Array#FoldLeft1D","content":"Unused &lt;/&gt; Array.FoldLeft1D() → () Not exactly sure the purpose of this one, ask Adam  "},{"title":"FoldRight1D","type":1,"pageTitle":"Array","url":"api/Array#FoldRight1D","content":"Unused &lt;/&gt; Array.FoldRight1D() → () Not exactly sure the purpose of this one, ask Adam  "},{"title":"Insert1D","type":1,"pageTitle":"Array","url":"api/Array#Insert1D","content":"&lt;/&gt; Array.Insert1D( Array: {[number]: any}, Value: any, At: number ) → {[number]: any}-- New array with the inserted value Inserts a given value into a given array at the specific position Not sure the benefits of this over table.insert, ask Adam  "},{"title":"Map1D","type":1,"pageTitle":"Array","url":"api/Array#Map1D","content":"&lt;/&gt; Array.Map1D( Array: {[number]: any}, Operation: ( Value: any, ItemIndex: number ) → any ) → {[number]: any}-- the transformed array Transforms a given array based on the operator function  "},{"title":"Merge1D","type":1,"pageTitle":"Array","url":"api/Array#Merge1D","content":"&lt;/&gt; Array.Merge1D( ...: any...-- Arguments to merge together ) → {[number]: any} Merges arguments into an array  "},{"title":"Remove1D","type":1,"pageTitle":"Array","url":"api/Array#Remove1D","content":"&lt;/&gt; Array.Remove1D( Array: {[number]: any}, Index: number ) → {[number]: any} Remove an element from an array based off of the given index  "},{"title":"Reverse1D","type":1,"pageTitle":"Array","url":"api/Array#Reverse1D","content":"&lt;/&gt; Array.Reverse1D(Array: {[number]: any}) → {[number]: any}-- Array but reversed Reverses an array  "},{"title":"SelectFirst1D","type":1,"pageTitle":"Array","url":"api/Array#SelectFirst1D","content":"&lt;/&gt; Array.SelectFirst1D( Array: {[number]: any}, Condition: ( Value: any, Index: number ) → boolean ) → any Returns the first value that matches the given condition  "},{"title":"SelectLast1D","type":1,"pageTitle":"Array","url":"api/Array#SelectLast1D","content":"&lt;/&gt; Array.SelectLast1D( Array: {[number]: any}, Condition: ( Value: any, Index: number ) → boolean ) → any Returns the last value that matches the given condition  "},{"title":"Shuffle1D","type":1,"pageTitle":"Array","url":"api/Array#Shuffle1D","content":"&lt;/&gt; Array.Shuffle1D( Array: {[number]: any}, Seed: number ) → {[number]: any}-- shuffled array Randomly shuffles the array based on the passed seed. If no seed is passed, os.clock() is used as the default  "},{"title":"Sort1D","type":1,"pageTitle":"Array","url":"api/Array#Sort1D","content":"&lt;/&gt; Array.Sort1D( Array: {[number]: any}, Comparator: ( any1, any2 ) → boolean-- where typeof(any1) == typeof(any2) ) → () Sorts the given array based on the condition return {[number]: any} "},{"title":"spr","type":0,"sectionRef":"#","url":"api/spr","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"spr","url":"api/spr#functions","content":" "},{"title":"stop","type":1,"pageTitle":"spr","url":"api/spr#stop","content":"&lt;/&gt; spr.stop( instance: Instance, property: string | nil ) → () Stop the spring animation completely  "},{"title":"target","type":1,"pageTitle":"spr","url":"api/spr#target","content":"&lt;/&gt; spr.target( instance: Instance, dampingRatio: number, frequency: number, properties: table-- A table of properties on the instance for the animation to be applied to ) → () Sets the target for the spring animation "},{"title":"Map","type":0,"sectionRef":"#","url":"api/Map","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"Map","url":"api/Map#functions","content":" "},{"title":"Filter1D","type":1,"pageTitle":"Map","url":"api/Map#Filter1D","content":"&lt;/&gt; Map.Filter1D( Array: {[key: any]: any}, Condition: ( Value: any, Key: any ) → boolean ) → {[key: any]: any} Turns any size Array into a one dimensional array  "},{"title":"Keys1D","type":1,"pageTitle":"Map","url":"api/Map#Keys1D","content":"&lt;/&gt; Map.Keys1D(Structure: {[key: any]: any}) → {[number]: key} Takes an array and returns a set of just the keys  "},{"title":"Map1D","type":1,"pageTitle":"Map","url":"api/Map#Map1D","content":"&lt;/&gt; Map.Map1D( Structure: {[key: any]: any}, Operation: ( Value: any, Key: any ) → ( any, any | nil ) ) → {[key: any]: any} Turns a multi-dimensonal map into a one dimensional map  "},{"title":"Merge1D","type":1,"pageTitle":"Map","url":"api/Map#Merge1D","content":"&lt;/&gt; Map.Merge1D( ...: any...-- Should be passed as Merge1D(1, 2, 3, 4, 5) ) → {[number]: any} Merges X amount of arguments into one list  "},{"title":"MergeDeep","type":1,"pageTitle":"Map","url":"api/Map#MergeDeep","content":"Recursive &lt;/&gt; Map.MergeDeep( Structure: {[any]: any}, Into: {[any]: any} ) → Structure+Into Performs a deep merge of a table into another table  "},{"title":"Values1D","type":1,"pageTitle":"Map","url":"api/Map#Values1D","content":"&lt;/&gt; Map.Values1D(Structure: {[any]: any}) → {[number]: any} Takes in a map, returns only it's values in a numerical array "},{"title":"NumericalMap","type":0,"sectionRef":"#","url":"api/NumericalMap","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"NumericalMap","url":"api/NumericalMap#functions","content":" "},{"title":"new","type":1,"pageTitle":"NumericalMap","url":"api/NumericalMap#new","content":"&lt;/&gt; NumericalMap.new( element: any-- An element corresponding to the type of elements in the map ) → () The class constructor  "},{"title":"HigherEntry","type":1,"pageTitle":"NumericalMap","url":"api/NumericalMap#HigherEntry","content":"&lt;/&gt; NumericalMap:HigherEntry() → any | nil-- The found value, or nil Searches for a value associated with the least key strictly greater than the given key  "},{"title":"LowerEntry","type":1,"pageTitle":"NumericalMap","url":"api/NumericalMap#LowerEntry","content":"&lt;/&gt; NumericalMap:LowerEntry() → any | nil-- The found value, or nil Searches for a value associated with the greatest key strictly less than the given key  "},{"title":"Put","type":1,"pageTitle":"NumericalMap","url":"api/NumericalMap#Put","content":"&lt;/&gt; NumericalMap:Put() → any-- The put element Associates the specified value with the specified key in this map.  "},{"title":"Remove","type":1,"pageTitle":"NumericalMap","url":"api/NumericalMap#Remove","content":"&lt;/&gt; NumericalMap:Remove() → any-- The removed element Removes the mapping for this key from this NumericalMap if present. "},{"title":"ComponentSystem","type":0,"sectionRef":"#","url":"api/ComponentSystem","content":"","keywords":""},{"title":"Types","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#types","content":" "},{"title":"ComponentClass","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClass","content":"&lt;/&gt; interface ComponentClass { Type: string-- The string equivalent of the class's type new: function-- Constructor function Initial: function-- Starts the component Destory: function-- Destroys the component }   "},{"title":"ComponentClassAddedEvents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassAddedEvents","content":"&lt;/&gt; type ComponentClassAddedEvents = {[ComponentClass]: BindableEvent}   "},{"title":"ComponentClassInitializedEvents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassInitializedEvents","content":"&lt;/&gt; type ComponentClassInitializedEvents = {[ComponentClass]: BindableEvent}   "},{"title":"ComponentClassRemovedEvents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassRemovedEvents","content":"&lt;/&gt; type ComponentClassRemovedEvents = {[ComponentClass]: BindableEvent}   "},{"title":"ComponentClassToComponents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassToComponents","content":"&lt;/&gt; type ComponentClassToComponents = {[ComponentClass]: {[ComponentInstance]: boolean}}   "},{"title":"ComponentClassToInstances","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassToInstances","content":"&lt;/&gt; type ComponentClassToInstances = {[ComponentClass]: {[Instance]: boolean}}   "},{"title":"ComponentInstance","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentInstance","content":"&lt;/&gt; type ComponentInstance = any   "},{"title":"InstanceToComponents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#InstanceToComponents","content":"&lt;/&gt; type InstanceToComponents = {[Instance]: {[ComponentClass]: ComponentInstance}}  "},{"title":"Properties","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#properties","content":" "},{"title":"ComponentClassAddedEvents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassAddedEvents","content":"&lt;/&gt; ComponentSystem.ComponentClassAddedEvents: ComponentClassAddedEvents Map of initialized Component Classes with values of Component Added BindableEvents  "},{"title":"ComponentClassInitializedEvents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassInitializedEvents","content":"&lt;/&gt; ComponentSystem.ComponentClassInitializedEvents: ComponentClassInitializedEvents Map of initialized Component Classes with values of Component Initialized BindableEvents  "},{"title":"ComponentClassRemovedEvents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassRemovedEvents","content":"&lt;/&gt; ComponentSystem.ComponentClassRemovedEvents: ComponentClassRemovedEvents Map of initialized Component Classes with values of Component Removed BindableEvents  "},{"title":"ComponentClassToComponents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassToComponents","content":"&lt;/&gt; ComponentSystem.ComponentClassToComponents: ComponentClassToComponents Map of Uninitialized Component Classes as keys with values of Array  "},{"title":"ComponentClassToInstances","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#ComponentClassToInstances","content":"&lt;/&gt; ComponentSystem.ComponentClassToInstances: ComponentClassToInstances Map of ComponentClasses as keys with values of Array  "},{"title":"InstanceToComponents","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#InstanceToComponents","content":"&lt;/&gt; ComponentSystem.InstanceToComponents: InstanceToComponents Map of tagged Instances as keys with values of Array "},{"title":"Functions","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#functions","content":" "},{"title":"AwaitComponent","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#AwaitComponent","content":"&lt;/&gt; ComponentSystem.AwaitComponent() → () Waits for a component instance's construction on a given Instance and returns it. Throws errors for timeout and target. Instance deparenting to prevent memory leaks.  "},{"title":"AwaitComponentInit","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#AwaitComponentInit","content":"todo Re-work to get rid of the _INITIALIZED field approach and use key associations in another table &lt;/&gt; ComponentSystem.AwaitComponentInit() → () Waits for a component instance's asynchronous Initial method to complete and returns it. Throws errors for timeout and target. Instance deparenting to prevent memory leaks.  "},{"title":"GetComponent","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#GetComponent","content":"&lt;/&gt; ComponentSystem.GetComponent( Object: Instance, ComponentClass: ComponentClass ) → ComponentInstance | nil Attempts to obtain a specific component from an Instance given a component class.  "},{"title":"GetComponentFromDescendant","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#GetComponentFromDescendant","content":"&lt;/&gt; ComponentSystem.GetComponentFromDescendant() → () Obtains a component instance from an Instance or any of its ascendants.  "},{"title":"GetComponentsFromInstance","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#GetComponentsFromInstance","content":"todo Think of an efficient way to prevent external writes to the returned table. &lt;/&gt; ComponentSystem.GetComponentsFromInstance() → () Obtains all components of any class which are associated to a specific Instance.  "},{"title":"GetComponentsOfClass","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#GetComponentsOfClass","content":"todo Think of an efficient way to prevent external writes to the returned table. &lt;/&gt; ComponentSystem.GetComponentsOfClass() → () Obtains Map of all components of a particular class.  "},{"title":"GetInstancesOfClass","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#GetInstancesOfClass","content":"todo Think of an efficient way to prevent external writes to the returned table. &lt;/&gt; ComponentSystem.GetInstancesOfClass() → () Obtains Map of all Instances for which there exists a given component class on.  "},{"title":"Register","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#Register","content":"&lt;/&gt; ComponentSystem.Register( Tag: string,-- The string of the CollectionService tag Components: {ComponentClass},-- An array of ComponentClasses AncestorTarget: Instance?-- The instance to look if any descendants added to it have the given Tag ) → () Registers component(s) to be automatically associated with instances with a certain tag.  "},{"title":"WaitForComponent","type":1,"pageTitle":"ComponentSystem","url":"api/ComponentSystem#WaitForComponent","content":"deprecated in v0.1 &lt;/&gt; This was deprecated in v0.1 This item is deprecated. Do not use it for new work. ComponentSystem.WaitForComponent() → () Provides backwards compatibility, deprecated in favor of AwaitComponent "},{"title":"springs","type":0,"sectionRef":"#","url":"api/springs","content":"","keywords":""},{"title":"Types","type":1,"pageTitle":"springs","url":"api/springs#types","content":" "},{"title":"springs","type":1,"pageTitle":"springs","url":"api/springs#springs","content":"&lt;/&gt; interface springs { pos: number-- The position of the spring vel: number-- The velocity of the spring tar: number k: number d: number }  "},{"title":"Functions","type":1,"pageTitle":"springs","url":"api/springs#functions","content":" "},{"title":"new","type":1,"pageTitle":"springs","url":"api/springs#new","content":"&lt;/&gt; springs.new( pos: number, vel: number, tar: number, k: number, d: number ) → spring Constructs a new spring  "},{"title":"update","type":1,"pageTitle":"springs","url":"api/springs#update","content":"&lt;/&gt; springs.update( dt: number-- how much the spring should be updated by ) → () Update the springs params "},{"title":"ReplicationInterface","type":0,"sectionRef":"#","url":"api/ReplicationInterface","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#functions","content":" "},{"title":"new","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#new","content":"&lt;/&gt; ReplicationInterface.new( Replication: ReplicationContainerType, ReplicationPath: table? ) → () Constructs a new ReplicationInterface wrapper For param types, see ReplicationContainer  "},{"title":"Await","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#Await","content":"&lt;/&gt; ReplicationInterface:Await( ...: any-- Path to the information to get while awaiting ) → () Awaiting for the information to exist before returning it  "},{"title":"Extend","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#Extend","content":"&lt;/&gt; ReplicationInterface:Extend( Extra: string | table-- The Path to be extended ) → () Creates a new ReplicationInterface with an extension of the path. TODO: set up LRU cache for these objects?  "},{"title":"Get","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#Get","content":"&lt;/&gt; ReplicationInterface:Get( ...: any-- Path to the information to get ) → () Standard get/set/await/etc. for manipulating and reading data.  "},{"title":"GetValueChangedSignal","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#GetValueChangedSignal","content":"&lt;/&gt; ReplicationInterface:GetValueChangedSignal() → RBLXScriptSignal-- An event to be connected to that is fired whenever the value of the replication interface changes   "},{"title":"Increment","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#Increment","content":"&lt;/&gt; ReplicationInterface:Increment() → () NEED MORE DOCUMENTATION @ADAM  "},{"title":"Insert","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#Insert","content":"&lt;/&gt; ReplicationInterface:Insert() → () Insert value into array. NEEDS MORE DOCUMENTATION @ADAM  "},{"title":"Set","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#Set","content":"&lt;/&gt; ReplicationInterface:Set( ...: any-- Path to the information to set ) → ()   "},{"title":"XAwait","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#XAwait","content":"&lt;/&gt; ReplicationInterface:XAwait( ...: any-- Path to the information to get while awaiting ) → () Extends on a given path, then awaits that information  "},{"title":"XGet","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#XGet","content":"&lt;/&gt; ReplicationInterface:XGet( ...: any-- Path to the information to get ) → () Extends on a given path, then returns that information  "},{"title":"XSet","type":1,"pageTitle":"ReplicationInterface","url":"api/ReplicationInterface#XSet","content":"&lt;/&gt; ReplicationInterface:XSet( ...: any-- Path to the information to set ) → () Extends on a given path, then sets that information "},{"title":"TranslationUtil","type":0,"sectionRef":"#","url":"api/TranslationUtil","content":"","keywords":""},{"title":"Functions","type":1,"pageTitle":"TranslationUtil","url":"api/TranslationUtil#functions","content":" "},{"title":"AwaitTranslationForKey","type":1,"pageTitle":"TranslationUtil","url":"api/TranslationUtil#AwaitTranslationForKey","content":"&lt;/&gt; TranslationUtil.AwaitTranslationForKey() → () Attempts to fetch a translation string associated with the Key, optionally taking arguments used in the translation string. If successful, this will return the translated string. If unsuccessful, this returns nil.  "},{"title":"AwaitTranslationForLabel","type":1,"pageTitle":"TranslationUtil","url":"api/TranslationUtil#AwaitTranslationForLabel","content":"&lt;/&gt; TranslationUtil.AwaitTranslationForLabel() → () Attempts to fetch a translation string for SourceString using the context of a TextLabel. Rich text is stripped from the SourceString when sent to LocalizationService for lookup. This also disables the AutoLocalize property on the Context passed. If successful, this will return the translated string. If unsuccessful, this will return the source string. "},{"title":"ReplicationContainer","type":0,"sectionRef":"#","url":"api/ReplicationContainer","content":"","keywords":""},{"title":"Types","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#types","content":" "},{"title":"ReplicatedKey","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#ReplicatedKey","content":"&lt;/&gt; type ReplicatedKey = string | number   "},{"title":"ReplicationContainerType","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#ReplicationContainerType","content":"&lt;/&gt; interface ReplicationContainerType { UnchangingKeys: {[ReplicationKey]: number Awaiting: {[string]: BindableEvent} AwaitingRefs: {[string]: number} EventConnection: RBXScriptConnection? PreSyncData: ReplicationChanges Changes: ReplicationChanges Store: ReplicationStore IsServer: boolean RemoteEvent: any Synced: boolean Sequence: number }   "},{"title":"ReplicationPath","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#ReplicationPath","content":"&lt;/&gt; type ReplicationPath = {[number]: ReplicationKey}  "},{"title":"Properties","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#properties","content":" "},{"title":"SupressWriteWarning","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#SupressWriteWarning","content":"&lt;/&gt; ReplicationContainer.SupressWriteWarning: boolean--Shouldthecontaineroutputwarnings?  "},{"title":"Functions","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#functions","content":" "},{"title":"new","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#new","content":"&lt;/&gt; ReplicationContainer.new( RemoteEvent: RemoteEvent,-- The remote event that is fired for replication IsServer: boolean-- A boolean corresponding to whether this is on the client or server ) → ReplicationContainerType   "},{"title":"Await","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#Await","content":"&lt;/&gt; ReplicationContainer:Await( UncorrectedPath: ReplicationPath, Timeout: number? ) → any Waits for a value  "},{"title":"Commit","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#Commit","content":"&lt;/&gt; ReplicationContainer:Commit( Data: {[any]: any},-- The data to be commited InitialSyncPrint: boolean-- Should the path be printed out? ) → () Commits a change to the replication container  "},{"title":"Destroy","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#Destroy","content":"&lt;/&gt; ReplicationContainer:Destroy() → () Destroys the container, cleans up all events that exist inside of it to avoid memory leaks  "},{"title":"Get","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#Get","content":"&lt;/&gt; ReplicationContainer:Get( UncorrectedPath: ReplicationPath, IsPathAlreadyCorrected: boolean? ) → any Obtains down a path; does not error  "},{"title":"GetAwaitEvent","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#GetAwaitEvent","content":"&lt;/&gt; ReplicationContainer:GetAwaitEvent(Path: ReplicationPath) → BindableEvent Creates or obtains the event corresponding to a path's value changing  "},{"title":"GetNextSequence","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#GetNextSequence","content":"&lt;/&gt; ReplicationContainer:GetNextSequence() → number Increments one to the internal sequence and returns it  "},{"title":"InitClient","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#InitClient","content":"This item only works when running on the client. Client &lt;/&gt; ReplicationContainer:InitClient() → () Client method; syncs the store  "},{"title":"InitServer","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#InitServer","content":"This item only works when running on the server. Server &lt;/&gt; ReplicationContainer:InitServer() → () Server method; receives client requests  "},{"title":"Set","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#Set","content":"&lt;/&gt; ReplicationContainer:Set( UncorrectedPath: ReplicationPath, Value: any, SendTo: {Player}?, NoEvent: boolean? ) → () Sets down a path; constructs tables if none are present along the way  "},{"title":"SetUnchanging","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#SetUnchanging","content":"&lt;/&gt; ReplicationContainer:SetUnchanging(Key: ReplicationKey) → () Ensures a key will only change once, useful for avoiding unnecessary replication w/ large unchanging data TODO: convert key using standard procedure  "},{"title":"New","type":1,"pageTitle":"ReplicationContainer","url":"api/ReplicationContainer#New","content":"deprecated in v0.1 &lt;/&gt; This was deprecated in v0.1 This item is deprecated. Do not use it for new work. ReplicationContainer.New() → () Mirrors .new "}]