"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[945],{31505:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new Cleaner object, which is passed objects to be cleaned once\\n\\nOnce a cleaner cleans, it is no longer functional, and a new cleaner must be created","params":[],"returns":[{"desc":"","lua_type":"Cleaner"}],"function_type":"static","source":{"line":32,"path":"Libraries/Cleaner.lua"}},{"name":"Add","desc":"Adds an object to this Cleaner. Object must be one of the following:\\n - Cleaner\\n - Function\\n - Roblox Instance\\n - Roblox Event Connection\\n - Table of cleanable objects\\n - Table containing one of the following methods:\\n\\t- Object:Clean()\\n\\t- Object:Destroy()\\n\\t- Object:Disconnect()","params":[],"returns":[],"function_type":"method","source":{"line":52,"path":"Libraries/Cleaner.lua"}},{"name":"Clean","desc":"Cleans and locks this Cleaner preventing it from being used again. If an object is added to the Cleaner after it has been locked, it will be cleaned immediately.","params":[],"returns":[],"function_type":"method","source":{"line":67,"path":"Libraries/Cleaner.lua"}}],"properties":[],"types":[{"name":"Cleaner","desc":"","fields":[{"name":"Index","lua_type":"number","desc":""},{"name":"HasCleaned","lua_type":"boolean","desc":""},{"name":"ToProcess","lua_type":"{[number]: any}","desc":""}],"source":{"line":6,"path":"Libraries/Cleaner.lua"}},{"name":"CleanableObjects","desc":"","lua_type":"Instance | RBXScriptConnection | (any) -> any | Cleaner | { CleanableObjects } | { Destroy: (any) -> any } | { Disconnect: (any) -> any }","source":{"line":14,"path":"Libraries/Cleaner.lua"}}],"name":"Cleaner","desc":"Manages the cleaning of events and other things.\\nUseful for encapsulating state and make deconstructors easy","source":{"line":22,"path":"Libraries/Cleaner.lua"}}')}}]);