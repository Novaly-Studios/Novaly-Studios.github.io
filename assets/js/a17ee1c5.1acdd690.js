"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[568],{67146:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new Load object","params":[{"name":"Timeout","desc":"how long we should wait for the object to load","lua_type":"number"},{"name":"Requirement","desc":"how many times the object needs to load","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Load"}],"function_type":"static","source":{"line":35,"path":"Libraries/Load.lua"}},{"name":"CheckLoaded","desc":"Checks if the Load object is loaded","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":66,"path":"Libraries/Load.lua"}},{"name":"Step","desc":"Increases the load counter one","params":[],"returns":[],"function_type":"method","source":{"line":73,"path":"Libraries/Load.lua"}},{"name":"AwaitLoaded","desc":"Yields until the object is loaded","params":[],"returns":[],"function_type":"method","yields":true,"source":{"line":86,"path":"Libraries/Load.lua"}}],"properties":[],"types":[],"name":"Load","desc":"Purpose of this is primarily to use in\\ncomponents. We want x async steps to\\nexecute before the component is usable\\ni.e. has loaded, so allow AwaitLoaded to\\nblock any coroutines until it\'s loaded OR\\nit times out. Timeouts prevent memory leaks\\ndue to dead coroutines.\\n\\nIn short, makes awaiting object loading\\nmuch easier.\\n\\nTODO: write automated tests (though I tested\\nthis thoroughly while writing)","source":{"line":25,"path":"Libraries/Load.lua"}}')}}]);